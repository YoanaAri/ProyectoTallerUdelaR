
package service;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "DepartamentoServiceService", targetNamespace = "http://Service/", wsdlLocation = "http://localhost:8970/DepartamentoService?wsdl")
public class DepartamentoServiceService
    extends Service
{

    private final static URL DEPARTAMENTOSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException DEPARTAMENTOSERVICESERVICE_EXCEPTION;
    private final static QName DEPARTAMENTOSERVICESERVICE_QNAME = new QName("http://Service/", "DepartamentoServiceService");

    static {
        URL url = null;
        String puerto = "8960";
        WebServiceException e = null;
			InputStream input;
			try {
				
				input = new FileInputStream(System.getProperty("user.home")+File.separator+".turismoUy"+File.separator+"config.properties");
				Properties propiedades = new Properties();
				propiedades.load(input);
				puerto = (String) propiedades.get("puertoDepM");
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			// TODO Auto-generated catch block
	
        try {
            url = new URL("http://localhost:"+puerto+"/DepartamentoService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DEPARTAMENTOSERVICESERVICE_WSDL_LOCATION = url;
        DEPARTAMENTOSERVICESERVICE_EXCEPTION = e;
    }

    public DepartamentoServiceService() {
        super(__getWsdlLocation(), DEPARTAMENTOSERVICESERVICE_QNAME);
    }

    public DepartamentoServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DEPARTAMENTOSERVICESERVICE_QNAME, features);
    }

    public DepartamentoServiceService(URL wsdlLocation) {
        super(wsdlLocation, DEPARTAMENTOSERVICESERVICE_QNAME);
    }

    public DepartamentoServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DEPARTAMENTOSERVICESERVICE_QNAME, features);
    }

    public DepartamentoServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DepartamentoServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DepartamentoService
     */
    @WebEndpoint(name = "DepartamentoServicePort")
    public DepartamentoService getDepartamentoServicePort() {
        return super.getPort(new QName("http://Service/", "DepartamentoServicePort"), DepartamentoService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DepartamentoService
     */
    @WebEndpoint(name = "DepartamentoServicePort")
    public DepartamentoService getDepartamentoServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://Service/", "DepartamentoServicePort"), DepartamentoService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DEPARTAMENTOSERVICESERVICE_EXCEPTION!= null) {
            throw DEPARTAMENTOSERVICESERVICE_EXCEPTION;
        }
        return DEPARTAMENTOSERVICESERVICE_WSDL_LOCATION;
    }

}
